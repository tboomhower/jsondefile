[
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Birthplace",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Bucks Co., PA",
          "Bucks Co. PA",
          "Bucks Co., Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bucks Co., PA"
      },
      {
        "from": [
          "Albany N.Y.",
          "Albany, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany N.Y."
      },
      {
        "from": [
          "Adams Co., PA",
          "Adams Co., Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adams Co., PA"
      },
      {
        "from": [
          "Amsterdam, Holland",
          "Holland, Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Amsterdam, Holland"
      },
      {
        "from": [
          "Philadelphia",
          "Philadelphia."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia"
      },
      {
        "from": [
          "Sussex Co. Delaware",
          "Sussex Co., Delaware"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sussex Co. Delaware"
      },
      {
        "from": [
          "Carlisle, PA",
          "Carlisle, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carlisle, PA"
      },
      {
        "from": [
          "Philadelphia Co.",
          "Philadelphia, Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia Co."
      },
      {
        "from": [
          "Penna.",
          "Penna"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Penna."
      },
      {
        "from": [
          "Frederick Co, Maryland",
          "Frederick Co., Maryland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frederick Co, Maryland"
      },
      {
        "from": [
          "Lehigh Co.",
          "Lehigh Co"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lehigh Co."
      },
      {
        "from": [
          "Mifflin, PA",
          "Mifflin, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mifflin, PA"
      },
      {
        "from": [
          "Northampton, PA",
          "Northampton, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Northampton, PA"
      },
      {
        "from": [
          "York Co.",
          "York, Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "York Co."
      },
      {
        "from": [
          "NJ",
          "N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NJ"
      },
      {
        "from": [
          "Bucks Co.",
          "Bucks Co"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bucks Co."
      },
      {
        "from": [
          "Reading, PA",
          "Reading, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reading, PA"
      },
      {
        "from": [
          "Lancaster, PA",
          "Lancaster, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lancaster, PA"
      }
    ],
    "description": "Mass edit cells in column Birthplace"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Birthplace",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Northampton, PA",
          "Northhampton, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Northampton, PA"
      },
      {
        "from": [
          "Delaware Co.",
          "Delware Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delaware Co."
      },
      {
        "from": [
          "Virginia",
          "Virgina"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Virginia"
      }
    ],
    "description": "Mass edit cells in column Birthplace"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Birthplace",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Wilmington, Dela."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wilmington, Delaware"
      }
    ],
    "description": "Mass edit cells in column Birthplace"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Birthplace",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Albany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany, New York"
      }
    ],
    "description": "Mass edit cells in column Birthplace"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Birthplace",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Albany N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany, New York"
      }
    ],
    "description": "Mass edit cells in column Birthplace"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Offense",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Horse Stealing & Larceny",
          "Horse stealing & Larceny",
          "Horse stealing & larceny",
          "Horse stealing + Larceny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Horse Stealing & Larceny"
      },
      {
        "from": [
          "Assault and battery intent to kill",
          "Assault and battery, intent to kill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Assault and battery intent to kill"
      },
      {
        "from": [
          "Murder, 2nd degree",
          "Murder 2nd degree"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murder, 2nd degree"
      },
      {
        "from": [
          "Horse stealing",
          "Horse Stealing"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Horse stealing"
      },
      {
        "from": [
          "Assault and Battery, intent to rape",
          "Assault and battery intent to rape"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Assault and Battery, intent to rape"
      },
      {
        "from": [
          "Assault intention to kill",
          "Assault, intention to kill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Assault intention to kill"
      },
      {
        "from": [
          "Assault and Battery",
          "Assault and battery"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Assault and Battery"
      },
      {
        "from": [
          "Larceny",
          "larceny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Larceny"
      },
      {
        "from": [
          "Counterfeiting",
          "counterfeiting"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Counterfeiting"
      },
      {
        "from": [
          "Selling Counterfeit Money",
          "Selling counterfeit money"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Selling Counterfeit Money"
      },
      {
        "from": [
          "Burglary & Larceny",
          "Burglary & larceny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Burglary & Larceny"
      }
    ],
    "description": "Mass edit cells in column Offense"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "PrisonerNumber",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PrisonerNumber using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Age",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Age using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "NumberConvictions",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NumberConvictions using expression value.toNumber()"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Starred Rows",
          "expression": "row.starred",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ColumnNote",
    "expression": "value",
    "edits": [
      {
        "from": [
          "reads and writes; drinks; married",
          "reads and writes, drinks, married",
          "Reads and writes, drinks, married",
          "reads and writes; married; drinks",
          "drinks; married; reads and writes",
          "reads and writes, married, drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; drinks; married"
      },
      {
        "from": [
          "reads and writes, drinks, single",
          "reads and writes; drinks; single",
          "Reads and writes, drinks, single",
          "reads and writes; single; drinks",
          "reads and writes, drinks , single",
          "reads and writes, drinks,  single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes, drinks, single"
      },
      {
        "from": [
          "reads and writes; sober; single",
          "reads and writes, sober, single",
          "reads and writes; single; sober",
          "Reads and writes, sober, single",
          "Reads and writes; sober; single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; sober; single"
      },
      {
        "from": [
          "reads, drinks, single",
          "reads; drinks; single",
          "Reads, drinks, single",
          "Reads, single, drinks",
          "reads; single; drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, drinks, single"
      },
      {
        "from": [
          "can't read or write, drinks, single",
          "Can't read or write, drinks, single",
          "can't read or write; drinks; single",
          "Can't read or write, single, drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or write, drinks, single"
      },
      {
        "from": [
          "reads, drinks, married",
          "reads; drinks; married",
          "Reads, drinks, married",
          "Reads; married; drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, drinks, married"
      },
      {
        "from": [
          "Can't read or write, temperate, single",
          "can't read or write, temperate, single",
          "Can't read or write, single, temperate",
          "Can't read or write, temperate,  single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can't read or write, temperate, single"
      },
      {
        "from": [
          "reads, sober, married",
          "reads, married, sober",
          "reads; sober; married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, sober, married"
      },
      {
        "from": [
          "cannot read; drinks; single",
          "Cannot read; drinks; single",
          "cannot read; single; drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read; drinks; single"
      },
      {
        "from": [
          "reads, sober, single",
          "reads; sober; single",
          "reads; single; sober"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, sober, single"
      },
      {
        "from": [
          "reads and writes; gets drunk; single",
          "reads and writes, gets drunk, single",
          "reads and writes; single; gets drunk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; gets drunk; single"
      },
      {
        "from": [
          "Can't read, temperate, married",
          "can't read, married, temperate",
          "can't read, temperate, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can't read, temperate, married"
      },
      {
        "from": [
          "reads and writes, temperate, married",
          "Reads and writes, temperate, married",
          "reads and writes, married, temperate"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes, temperate, married"
      },
      {
        "from": [
          "reads and writes, temperate, single",
          "Reads and writes, temperate, single",
          "reads and writes, single, temperate"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes, temperate, single"
      },
      {
        "from": [
          "reads & writes, gets drunk, single",
          "reads, writes, gets drunk, single",
          "reads, writes, single, gets drunk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads & writes, gets drunk, single"
      },
      {
        "from": [
          "reads and writes; drinks; widower",
          "reads and writes, drinks, widower",
          "reads and writes, widower, drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; drinks; widower"
      },
      {
        "from": [
          "Can't read",
          "can't read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can't read"
      },
      {
        "from": [
          "reads; got drunk; single",
          "reads, got drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads; got drunk; single"
      },
      {
        "from": [
          "reads, writes, gets drunk, married",
          "reads & writes, gets drunk, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, writes, gets drunk, married"
      },
      {
        "from": [
          "reads and writes; sober; married",
          "reads and writes; married; sober"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; sober; married"
      },
      {
        "from": [
          "can't read or write, drunk, single",
          "Can't read or write, drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or write, drunk, single"
      },
      {
        "from": [
          "reads, drank, married",
          "reads; drank; married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, drank, married"
      },
      {
        "from": [
          "can't read or write, drinks, married",
          "Can't read or write, drinks, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or write, drinks, married"
      },
      {
        "from": [
          "reads; gets drunk; single",
          "reads, gets drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads; gets drunk; single"
      },
      {
        "from": [
          "can't read, drinks, single",
          "can't read, single, drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read, drinks, single"
      },
      {
        "from": [
          "reads and writes a little; gets drunk; married",
          "reads and writes a little; married; gets drunk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes a little; gets drunk; married"
      },
      {
        "from": [
          "reads a little; gets drunk; single",
          "reads a little, gets drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads a little; gets drunk; single"
      },
      {
        "from": [
          "cannot read; gets drunk; single",
          "cannot read, gets drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read; gets drunk; single"
      },
      {
        "from": [
          "cannot read or write; drinks; single",
          "cannot read or write, drinks, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read or write; drinks; single"
      },
      {
        "from": [
          "reads & writes, married, temperate",
          "reads & writes, temperate, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads & writes, married, temperate"
      },
      {
        "from": [
          "reads, writes, drinks, single",
          "reads & writes, drinks, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, writes, drinks, single"
      },
      {
        "from": [
          "reads and writes, single",
          "reads and writes; single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes, single"
      },
      {
        "from": [
          "Reads, drunk, married",
          "reads, drunk, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reads, drunk, married"
      },
      {
        "from": [
          "Can't read or write, temperate, married",
          "can't read or write, temperate, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can't read or write, temperate, married"
      },
      {
        "from": [
          "Can't read or write, gets drunk, married",
          "can't read or write, gets drunk, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can't read or write, gets drunk, married"
      },
      {
        "from": [
          "reads and writes",
          "Reads and writes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes"
      },
      {
        "from": [
          "reads, temperate, married",
          "reads, married, temperate"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, temperate, married"
      },
      {
        "from": [
          "reads German; gets drunk; married",
          "reads; gets drunk; married; reads German"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads German; gets drunk; married"
      },
      {
        "from": [
          "can't read, sober, single",
          "Can't read, sober, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read, sober, single"
      },
      {
        "from": [
          "reads and writes; got drunk; single",
          "Reads and writes, got drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; got drunk; single"
      },
      {
        "from": [
          "Reads and writes, temperate",
          "reads and writes; temperate"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reads and writes, temperate"
      },
      {
        "from": [
          "reads and writes; married; drank",
          "reads and writes; drank; married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; married; drank"
      },
      {
        "from": [
          "cannot read or write; drinks; single; learned to read",
          "cannot read or write; single; drinks; learned to read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read or write; drinks; single; learned to read"
      },
      {
        "from": [
          "Cannot read; drinks; single; reads German",
          "cannot read; drinks; single; reads German"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cannot read; drinks; single; reads German"
      },
      {
        "from": [
          "reads, writes, sober, married",
          "reads, writes, married, sober"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, writes, sober, married"
      },
      {
        "from": [
          "reads; drinks; widow",
          "reads, drinks, widow"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads; drinks; widow"
      },
      {
        "from": [
          "can't read or write, gets drunk, single",
          "can't read or write; gets drunk; single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or write, gets drunk, single"
      },
      {
        "from": [
          "reads & writes, drunk, single",
          "reads, writes, drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads & writes, drunk, single"
      },
      {
        "from": [
          "cannot read; drinks; married",
          "cannot read; married; drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read; drinks; married"
      },
      {
        "from": [
          "Can read",
          "can read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can read"
      },
      {
        "from": [
          "reads & writes German, sober, married",
          "reads writes German, married, sober"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads & writes German, sober, married"
      },
      {
        "from": [
          "reads, writes, drinks, married",
          "reads & writes, drinks, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, writes, drinks, married"
      },
      {
        "from": [
          "reads, writes, drunk, married",
          "reads & writes, drunk, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, writes, drunk, married"
      },
      {
        "from": [
          "cannot read or write; gets drunk; single",
          "cannot read or write, gets drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read or write; gets drunk; single"
      },
      {
        "from": [
          "reads, writes, single, temperate",
          "reads, writes, temperate, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, writes, single, temperate"
      },
      {
        "from": [
          "reads a little, drinks, married",
          "reads a little; married; drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads a little, drinks, married"
      },
      {
        "from": [
          "reads, single, drank",
          "reads; drank; single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, single, drank"
      }
    ],
    "description": "Mass edit cells in column ColumnNote"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ColumnNote",
    "expression": "grel:[ value.replace(\",\", \";\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ColumnNote using expression grel:[ value.replace(\",\", \";\")"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ColumnNote",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": ";",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column ColumnNote by separator"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ColumnNote 1",
    "newColumnName": "Literacy",
    "description": "Rename column ColumnNote 1 to Literacy"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ColumnNote 2",
    "newColumnName": "Sobriety",
    "description": "Rename column ColumnNote 2 to Sobriety"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ColumnNote 3",
    "newColumnName": "Marital Status",
    "description": "Rename column ColumnNote 3 to Marital Status"
  },
  {
    "op": "core/column-removal",
    "columnName": "ColumnNote 6",
    "description": "Remove column ColumnNote 6"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ColumnNote 4",
          "expression": "value",
          "columnName": "ColumnNote 4",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " can read",
                "l": " can read"
              }
            },
            {
              "v": {
                "v": " single",
                "l": " single"
              }
            },
            {
              "v": {
                "v": " sober",
                "l": " sober"
              }
            },
            {
              "v": {
                "v": " reads and writes",
                "l": " reads and writes"
              }
            },
            {
              "v": {
                "v": "  single",
                "l": "  single"
              }
            },
            {
              "v": {
                "v": " reads",
                "l": " reads"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "ColumnNote 4",
    "expression": "grel:cells[\"ColumnNote 4\"].value + \";\" + cells[\"ColumnNote 5\"].value",
    "onError": "set-to-blank",
    "newColumnName": "Noten\"extra info\"",
    "columnInsertIndex": 16,
    "description": "Create column Noten\"extra info\" at index 16 based on column ColumnNote 4 using expression grel:cells[\"ColumnNote 4\"].value + \";\" + cells[\"ColumnNote 5\"].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "Noten\"extra info\"",
    "description": "Remove column Noten\"extra info\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ColumnNote 4",
          "expression": "value",
          "columnName": "ColumnNote 4",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " can read",
                "l": " can read"
              }
            },
            {
              "v": {
                "v": " single",
                "l": " single"
              }
            },
            {
              "v": {
                "v": " sober",
                "l": " sober"
              }
            },
            {
              "v": {
                "v": " reads and writes",
                "l": " reads and writes"
              }
            },
            {
              "v": {
                "v": "  single",
                "l": "  single"
              }
            },
            {
              "v": {
                "v": " reads",
                "l": " reads"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "ColumnNote 5",
    "expression": "grel:cells[\"ColumnNote 4\"].value + \";\" + cells[\"ColumnNote 5\"].value",
    "onError": "set-to-blank",
    "newColumnName": "EXTRA",
    "columnInsertIndex": 17,
    "description": "Create column EXTRA at index 17 based on column ColumnNote 5 using expression grel:cells[\"ColumnNote 4\"].value + \";\" + cells[\"ColumnNote 5\"].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "ColumnNote 4",
    "description": "Remove column ColumnNote 4"
  },
  {
    "op": "core/column-removal",
    "columnName": "ColumnNote 5",
    "description": "Remove column ColumnNote 5"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Literacy",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Can spell",
          "can spell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can spell"
      },
      {
        "from": [
          "Can't read",
          "can't read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can't read"
      },
      {
        "from": [
          "Cannot read [[etc]]",
          "cannot read [[etc]]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cannot read [[etc]]"
      },
      {
        "from": [
          "cannot read",
          "Cannot read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read"
      },
      {
        "from": [
          "can't read or write",
          "Can't read or write"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or write"
      },
      {
        "from": [
          "cannot read or write",
          "Cannot read or write"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read or write"
      },
      {
        "from": [
          "Can read and write a little",
          "can read and write a little"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can read and write a little"
      },
      {
        "from": [
          "Can read",
          "can read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can read"
      },
      {
        "from": [
          "Can read a little",
          "can read a little"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can read a little"
      },
      {
        "from": [
          "Can read and write",
          "can read and write"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can read and write"
      },
      {
        "from": [
          "reads and writes a little",
          "Reads and writes a little"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes a little"
      },
      {
        "from": [
          "reads",
          "Reads"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads"
      },
      {
        "from": [
          "reads and writes",
          "Reads and writes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes"
      }
    ],
    "description": "Mass edit cells in column Literacy"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Literacy",
    "expression": "value",
    "edits": [
      {
        "from": [
          "reads and writes German",
          "Reads and writes German"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes German"
      }
    ],
    "description": "Mass edit cells in column Literacy"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value",
    "edits": [
      {
        "from": [
          " has learned to read in prison",
          " has learned to read in Prison"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " has learned to read in prison"
      },
      {
        "from": [
          " drank occasionally",
          " drunk occasionally"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " drank occasionally"
      },
      {
        "from": [
          " gets drunk",
          " gets drunks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " gets drunk"
      }
    ],
    "description": "Mass edit cells in column Sobriety"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value",
    "edits": [
      {
        "from": [
          " is married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "married"
      }
    ],
    "description": "Mass edit cells in column Sobriety"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value",
    "edits": [
      {
        "from": [
          " married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "married"
      }
    ],
    "description": "Mass edit cells in column Sobriety"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Sobriety using expression value.trim()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value",
    "edits": [
      {
        "from": [
          "has learned to read in prison",
          "learned to read in prison"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "has learned to read in prison"
      },
      {
        "from": [
          "has learned to read and write in prison",
          "learned to read and write in prison"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "has learned to read and write in prison"
      }
    ],
    "description": "Mass edit cells in column Sobriety"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value",
    "edits": [
      {
        "from": [
          "sober",
          "Sober"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "sober"
      },
      {
        "from": [
          "drunk often",
          "often drunk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "drunk often"
      }
    ],
    "description": "Mass edit cells in column Sobriety"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value",
    "edits": [
      {
        "from": [
          "can join 2 and 3 letters"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column Sobriety"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value",
    "edits": [
      {
        "from": [
          "can now read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column Sobriety"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value",
    "edits": [
      {
        "from": [
          "can read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column Sobriety"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Can read learned in prison"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column Sobriety"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation",
    "expression": "grel:[ value.replace(\",\", \";\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EthnicityReligionOccupation using expression grel:[ value.replace(\",\", \";\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation",
    "expression": "grel:value.replace(\",\", \";\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EthnicityReligionOccupation using expression grel:value.replace(\",\", \";\")"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": ";",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column EthnicityReligionOccupation by separator"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EthnicityReligionOccupation 1 using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EthnicityReligionOccupation 2 using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 3",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EthnicityReligionOccupation 3 using expression value.trim()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "EthnicityReligionOccupation 3",
    "expression": "grel:cells[\"EthnicityRelgionOccupation 2\"].value + \"female\" + cells[\"EthnicityReligionOccupation 3\"].value",
    "onError": "set-to-blank",
    "newColumnName": "Gender",
    "columnInsertIndex": 6,
    "description": "Create column Gender at index 6 based on column EthnicityReligionOccupation 3 using expression grel:cells[\"EthnicityRelgionOccupation 2\"].value + \"female\" + cells[\"EthnicityReligionOccupation 3\"].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "Gender",
    "description": "Remove column Gender"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Black",
          "black",
          "(Black)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black"
      },
      {
        "from": [
          "Light mulatto",
          "light mulatto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Light mulatto"
      },
      {
        "from": [
          "Mulatto",
          "mulatto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mulatto"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "EthnicityReligionOccupation 3",
    "expression": "grel:cells[\"EthnicityRelgionOccupation 2\"].value + \"female\" + cells[\"EthnicityReligionOccupation 3\"].value",
    "onError": "set-to-blank",
    "newColumnName": "Gender",
    "columnInsertIndex": 6,
    "description": "Create column Gender at index 6 based on column EthnicityReligionOccupation 3 using expression grel:cells[\"EthnicityRelgionOccupation 2\"].value + \"female\" + cells[\"EthnicityReligionOccupation 3\"].value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Black",
          "black",
          "(Black)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black"
      },
      {
        "from": [
          "Light mulatto",
          "light mulatto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Light mulatto"
      },
      {
        "from": [
          "Mulatto",
          "mulatto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mulatto"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EthnicityReligionOccupation 2 using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 3",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EthnicityReligionOccupation 3 using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EthnicityReligionOccupation 1 using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EthnicityReligionOccupation 2 using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 3",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EthnicityReligionOccupation 3 using expression value.trim()"
  },
  {
    "op": "core/column-removal",
    "columnName": "Gender",
    "description": "Remove column Gender"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Black",
          "black",
          "(Black)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black"
      },
      {
        "from": [
          "Light mulatto",
          "light mulatto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Light mulatto"
      },
      {
        "from": [
          "Mulatto",
          "mulatto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mulatto"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "EthnicityReligionOccupation 3",
    "expression": "grel:cells[\"EthnicityRelgionOccupation 2\"].value + \"female\" + cells[\"EthnicityReligionOccupation 3\"].value",
    "onError": "set-to-blank",
    "newColumnName": "Gender",
    "columnInsertIndex": 6,
    "description": "Create column Gender at index 6 based on column EthnicityReligionOccupation 3 using expression grel:cells[\"EthnicityRelgionOccupation 2\"].value + \"female\" + cells[\"EthnicityReligionOccupation 3\"].value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Black",
          "black",
          "(Black)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black"
      },
      {
        "from": [
          "Light mulatto",
          "light mulatto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Light mulatto"
      },
      {
        "from": [
          "Mulatto",
          "mulatto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mulatto"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EthnicityReligionOccupation 2 using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 3",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EthnicityReligionOccupation 3 using expression value.trim()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "EthnicityReligionOccupation 3",
          "expression": "value",
          "columnName": "EthnicityReligionOccupation 3",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Female",
                "l": "Female"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "EthnicityReligionOccupation 3",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "Gender1",
    "columnInsertIndex": 6,
    "description": "Create column Gender1 at index 6 based on column EthnicityReligionOccupation 3 using expression grel:value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 3",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Female"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 3"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 3",
    "expression": "value",
    "edits": [
      {
        "from": [
          ""
        ],
        "fromBlank": true,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 3"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Carpenter",
          "carpenter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carpenter"
      },
      {
        "from": [
          "Sailor",
          "sailor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sailor"
      },
      {
        "from": [
          "Blacksmith",
          "blacksmith"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Blacksmith"
      },
      {
        "from": [
          "Servant",
          "servant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Servant"
      },
      {
        "from": [
          "barber",
          "Barber"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "barber"
      },
      {
        "from": [
          "female",
          "Female"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "female"
      },
      {
        "from": [
          "Laborer",
          "laborer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Laborer"
      },
      {
        "from": [
          "Stone cutter",
          "stone cutter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stone cutter"
      },
      {
        "from": [
          "Shoemaker",
          "shoemaker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shoemaker"
      },
      {
        "from": [
          "weaver",
          "Weaver"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "weaver"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 2"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "EthnicityReligionOccupation 2",
          "expression": "value",
          "columnName": "EthnicityReligionOccupation 2",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "female",
                "l": "female"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "EthnicityReligionOccupation 2",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "Gender2",
    "columnInsertIndex": 5,
    "description": "Create column Gender2 at index 5 based on column EthnicityReligionOccupation 2 using expression grel:value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value",
    "edits": [
      {
        "from": [
          "female"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 2"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Blacksmith",
          "blacksmith"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Blacksmith"
      },
      {
        "from": [
          "Baker",
          "baker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baker"
      },
      {
        "from": [
          "Cabinet Maker",
          "Cabinet maker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cabinet Maker"
      },
      {
        "from": [
          "House Carpenter",
          "House carpenter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "House Carpenter"
      },
      {
        "from": [
          "Laborer",
          "laborer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Laborer"
      },
      {
        "from": [
          "Weaver",
          "[[Weaver]]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Weaver"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "EthnicityReligionOccupation 1",
          "expression": "value",
          "columnName": "EthnicityReligionOccupation 1",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Female",
                "l": "Female"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "EthnicityReligionOccupation 1",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "Gender 3",
    "columnInsertIndex": 4,
    "description": "Create column Gender 3 at index 4 based on column EthnicityReligionOccupation 1 using expression grel:value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Female"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Gender 3",
    "expression": "join ([coalesce(cells['Gender 3'].value,''),coalesce(cells['Gender2'].value,''),coalesce(cells['Gender1'].value,''),coalesce(cells['Gender'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "GENDER",
    "columnInsertIndex": 5,
    "description": "Create column GENDER at index 5 based on column Gender 3 using expression join ([coalesce(cells['Gender 3'].value,''),coalesce(cells['Gender2'].value,''),coalesce(cells['Gender1'].value,''),coalesce(cells['Gender'].value,'')],'')"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "GENDER",
    "expression": "value",
    "edits": [
      {
        "from": [
          "female",
          "Female"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "female"
      }
    ],
    "description": "Mass edit cells in column GENDER"
  },
  {
    "op": "core/column-removal",
    "columnName": "Gender 3",
    "description": "Remove column Gender 3"
  },
  {
    "op": "core/column-removal",
    "columnName": "Gender2",
    "description": "Remove column Gender2"
  },
  {
    "op": "core/column-removal",
    "columnName": "Gender1",
    "description": "Remove column Gender1"
  },
  {
    "op": "core/column-removal",
    "columnName": "Gender",
    "description": "Remove column Gender"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Brick maker",
          "brickmaker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brick maker"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 2"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Shoemaker",
          "showmaker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shoemaker"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 2"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "EthnicityReligionOccupation 2",
          "expression": "value",
          "columnName": "EthnicityReligionOccupation 2",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Irish Catholic",
                "l": "Irish Catholic"
              }
            },
            {
              "v": {
                "v": "Protestant",
                "l": "Protestant"
              }
            },
            {
              "v": {
                "v": "Presbyterian",
                "l": "Presbyterian"
              }
            },
            {
              "v": {
                "v": "German Lutheran",
                "l": "German Lutheran"
              }
            },
            {
              "v": {
                "v": "German reform",
                "l": "German reform"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "EthnicityReligionOccupation 2",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "Religion1",
    "columnInsertIndex": 6,
    "description": "Create column Religion1 at index 6 based on column EthnicityReligionOccupation 2 using expression grel:value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value",
    "edits": [
      {
        "from": [
          "German Lutheran"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 2"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value",
    "edits": [
      {
        "from": [
          "German reform"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 2"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Irish Catholic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 2"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Presbyterian"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 2"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 2",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Protestant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 2"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Gun stock maker",
          "Gunstock maker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gun stock maker"
      },
      {
        "from": [
          "Black & mulatto",
          "black/mulatto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black & mulatto"
      },
      {
        "from": [
          "Millwright",
          "Mill wright"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Millwright"
      },
      {
        "from": [
          "Stage driver",
          "Stagedriver"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stage driver"
      },
      {
        "from": [
          "Stone cutter",
          "Stonecutter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stone cutter"
      },
      {
        "from": [
          "Bricklayer",
          "Brick layer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bricklayer"
      },
      {
        "from": [
          "Brickmaker",
          "Brick maker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brickmaker"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Carder",
          "Carter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carder"
      },
      {
        "from": [
          "Shoemaker",
          "Showmaker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shoemaker"
      },
      {
        "from": [
          "Merchant",
          "Marchant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Merchant"
      },
      {
        "from": [
          "Tobacconist",
          "Tobbaconist"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tobacconist"
      },
      {
        "from": [
          "Tailor",
          "Taylor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tailor"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "EthnicityReligionOccupation 1",
          "expression": "value",
          "columnName": "EthnicityReligionOccupation 1",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Catholic",
                "l": "Catholic"
              }
            },
            {
              "v": {
                "v": "Presbyterian",
                "l": "Presbyterian"
              }
            },
            {
              "v": {
                "v": "German Lutheran",
                "l": "German Lutheran"
              }
            },
            {
              "v": {
                "v": "Irish Presbyterian",
                "l": "Irish Presbyterian"
              }
            },
            {
              "v": {
                "v": "Irish Protestant",
                "l": "Irish Protestant"
              }
            },
            {
              "v": {
                "v": "Protestant",
                "l": "Protestant"
              }
            },
            {
              "v": {
                "v": "Irish Catholic",
                "l": "Irish Catholic"
              }
            },
            {
              "v": {
                "v": "Episcopal",
                "l": "Episcopal"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "EthnicityReligionOccupation 1",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "Religion2",
    "columnInsertIndex": 4,
    "description": "Create column Religion2 at index 4 based on column EthnicityReligionOccupation 1 using expression grel:value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Catholic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Episcopal"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "German Lutheran"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Irish Catholic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          ""
        ],
        "fromBlank": true,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Irish Presbyterian"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Irish Protestant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Presbyterian"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 1",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Protestant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 1"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "EthnicityReligionOccupation 3",
          "expression": "value",
          "columnName": "EthnicityReligionOccupation 3",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Catholic",
                "l": "Catholic"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "EthnicityReligionOccupation 3",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "Religion3",
    "columnInsertIndex": 9,
    "description": "Create column Religion3 at index 9 based on column EthnicityReligionOccupation 3 using expression grel:value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation 3",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Catholic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation 3"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Religion1",
    "expression": "join ([coalesce(cells['Religion1'].value,''),coalesce(cells['Religion2'].value,''),coalesce(cells['Religion3'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "Religion",
    "columnInsertIndex": 8,
    "description": "Create column Religion at index 8 based on column Religion1 using expression join ([coalesce(cells['Religion1'].value,''),coalesce(cells['Religion2'].value,''),coalesce(cells['Religion3'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "FirstName",
      "LastName",
      "Age",
      "EthnicityReligionOccupation 1",
      "GENDER",
      "EthnicityReligionOccupation 2",
      "Religion",
      "EthnicityReligionOccupation 3",
      "Birthplace",
      "PrisonerNumber",
      "AdmissionDate",
      "SentencingLocation",
      "Offense",
      "Sentencing",
      "NumberConvictions",
      "ColumnNote",
      "Literacy",
      "Sobriety",
      "Marital Status",
      "EXTRA",
      "DischargeNote",
      "Description"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "AdmissionDate",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AdmissionDate using expression value.toDate()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "timerange",
          "name": "AdmissionDate",
          "expression": "value",
          "columnName": "AdmissionDate",
          "from": -3767139360000,
          "to": 1451260800000,
          "selectTime": true,
          "selectNonTime": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "record-based"
    },
    "columnName": "AdmissionDate",
    "expression": "value",
    "edits": [
      {
        "from": [
          "1868-11-17T00:00:00Z"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1868-11-17T00:00:00Z"
      }
    ],
    "description": "Mass edit cells in column AdmissionDate"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "timerange",
          "name": "AdmissionDate",
          "expression": "value",
          "columnName": "AdmissionDate",
          "from": -3767139360000,
          "to": 1451260800000,
          "selectTime": true,
          "selectNonTime": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "record-based"
    },
    "columnName": "AdmissionDate",
    "expression": "value",
    "edits": [
      {
        "from": [
          "1868-11-17T00:00:00Z"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1868-11-17T00:00:00Z"
      }
    ],
    "description": "Mass edit cells in column AdmissionDate"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "timerange",
          "name": "AdmissionDate",
          "expression": "value",
          "columnName": "AdmissionDate",
          "from": -3767139360000,
          "to": 1451260800000,
          "selectTime": true,
          "selectNonTime": true,
          "selectBlank": false,
          "selectError": true
        }
      ],
      "mode": "record-based"
    },
    "columnName": "AdmissionDate",
    "expression": "value",
    "edits": [
      {
        "from": [
          "1868-11-17T00:00:00Z"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1868-11-17T00:00:00Z"
      }
    ],
    "description": "Mass edit cells in column AdmissionDate"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Sentencing",
    "expression": "grel:value.find(/([0-9]+)\\s(mos+)/).join(\"\").replace(\"mos\",\"\")",
    "onError": "set-to-blank",
    "newColumnName": "Months",
    "columnInsertIndex": 14,
    "description": "Create column Months at index 14 based on column Sentencing using expression grel:value.find(/([0-9]+)\\s(mos+)/).join(\"\").replace(\"mos\",\"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Sentencing",
    "expression": "grel:value.find(/([0-9]+)\\s(yr+)/).join(\"\").replace(\"yr\",\"\")",
    "onError": "set-to-blank",
    "newColumnName": "Years",
    "columnInsertIndex": 14,
    "description": "Create column Years at index 14 based on column Sentencing using expression grel:value.find(/([0-9]+)\\s(yr+)/).join(\"\").replace(\"yr\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Years",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Years using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Months",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Months using expression value.toNumber()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Years",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "Sentence in Months",
    "columnInsertIndex": 15,
    "description": "Create column Sentence in Months at index 15 based on column Years using expression grel:value"
  },
  {
    "op": "core/column-move",
    "columnName": "Sentence in Months",
    "index": 16,
    "description": "Move column Sentence in Months to position 16"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Years",
    "expression": "grel:sum([value * 12, cells.Months.value])",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Years using expression grel:sum([value * 12, cells.Months.value])"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Sentence in Months",
    "newColumnName": "YEARS",
    "description": "Rename column Sentence in Months to YEARS"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Years",
    "newColumnName": "Sentence in Months",
    "description": "Rename column Years to Sentence in Months"
  },
  {
    "op": "core/column-move",
    "columnName": "Sentence in Months",
    "index": 15,
    "description": "Move column Sentence in Months to position 15"
  },
  {
    "op": "core/column-move",
    "columnName": "Sentence in Months",
    "index": 16,
    "description": "Move column Sentence in Months to position 16"
  },
  {
    "op": "core/column-move",
    "columnName": "YEARS",
    "index": 14,
    "description": "Move column YEARS to position 14"
  }
]
